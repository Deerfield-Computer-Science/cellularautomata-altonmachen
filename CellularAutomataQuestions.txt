Alton Machen1. In what class does the program execution start. The program starts in the “runner”, which is called “WorldController.java” in this case. This class has a public void run and is the core of the graphics program. It starts by creating the canvas that this simulation will take place on.2. Describe the flow of execution of the program, where does it start?  Where does it go next? where does it end?The runner class calls on the other classes. For example, the object “theWorld” is a “world” object that is defined in the “world” class. The “LifeForm” class has subclasses of other living things.3.  How would you change the color of the grass?You would have to go into the plant class because it defines any plant as green. Because grass is a subclass of plant, it inherits all of its properties.4. Describe how grass reproduces.Currently, with the sample code, a new grass object will appear at a random location somewhere. I think the revised code should put the reproduced grass near the original grass.5. How could you make sure the grass does not reproduce a new grass plant on top of an existing grass?My plan was to set the location of the new grass 1 tile away from the original grass. A random generator will determine in which of the 8 neighboring tiles, it will be located.6. How are the creatures stored and manipulated?They are stored in an ArrayList called creatureList. They are manipulated by calling that array list. 7. What is the point of the method purgeTheDead()?That method essentially goes through and removes the dead life forms.8. Do the creatures have a location, or do locations have a creature?The creatures have a location. It is one of their properties.9. Does the world have creatures or do the creatures have a world?  Why is this necessary?The world has creatures.10. How would you make a creature move?  Describe what methods you would add and where you would put them?There could be a “move()” method in the lifeForm class that would modify the location of a creature. 